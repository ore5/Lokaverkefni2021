
library(subscore)
# Set up the data
test.inf=c(4,9,9,6,8)#4 subscores to be computed from 9, 9, 6, and 8 items
ns = test.inf[1]
Dat = TIMSS11G8M.data
n = nrow(Dat)
test.d = data.prep (Dat, test.inf)
# Use R package ‘‘subscore’’ to compute Haberman’s PRMSEs etc.
Subscores = CTTsub (test.d, method = "Haberman")
SubTot = Subscores$subscore.original
SP=Subscores$PRMSE # Haberman’s PRMSEs
# Compute PRMSEs suggested by Sinharay (2013) from Haberman’s PRMSEs
PRs = SP[1:ns,2]*SP[1:ns,2]
PRx = SP[1:ns,3]*SP[1:ns,2]
PRsx = SP[1:ns,4]*SP[1:ns,2]
rsx = cor(SubTot)[1:ns,(ns+1)]#Correlations between subscore & total
# Use R package ‘‘cocor’’ to compute Olkin’s Z and Williams’ t
library(cocor)
olk = rep(0,ns)
wil = rep(0,ns)

for (j in 1:ns)
{olk[j] = cocor.dep.groups.overlap(sqrt(PRs[j]),sqrt(PRx[j]),
                                   rsx[j],n)@olkin1967$statistic
wil[j] = cocor.dep.groups.overlap(sqrt(PRs[j]),
                                  sqrt(PRx[j]),rsx[j],n)@williams1959$statistic}

# A function to compute the Hedges-Olkin’s Z statistic
compsd = function(r01,r02,r12,r012,ns,n)
{a2 = 2*(r02-r12*r01)/(1-r12*r12)
a1 = -r12*a2
a3 = 2*(r12*r01*r01þr12*r02*r02-r01*r02*(1+r12^2))/((1-r12^2)**2)
V = matrix(0,3,3)
v11s = (1-r01^2)^2/n
v22s = (1-r02^2)^2/n
v33s = (1-r12^2)^2/n
z = rep(0,4)
for (j in 1:ns)
  V[1,2] = (0.5*(2*r12[j]-r01[j]*r02[j])*(1-r12[j]^2-r01[j]^2-r02[j]^2) + r12[j]^3)/n
  V[2,3] = (0.5*(2*r01[j]-r12[j]*r02[j]*(1-r12[j]^2-r01[j]^2-r02[j]^2)+r01[j]^3)/n
  V[1,3] = (0.5*(2*r02[j]-r12[j]*r01[j])*(1-r12[j]^2-r01[j]^2-r02[j]^2)+r02[j]^3)/n
  V[1,1] = v11s[j]
  V[2,2] = v22s[j]
  V[3,3] = v33s[j]
  for (i in 1:2) {for (k in (i+1):3){V[k,i] = V[i,k]}}
  vec = c(a1[j],a2[j],a3[j])
  SD = sqrt(t(vec)%*%V%V*%vec)
  z[j] = (r012[j]*r012[j]-r01[j]^2)/SD}
return(z){
zs = compsd(sqrt(PRs),sqrt(PRx),rsx,sqrt(PRsx),ns,n)#Compute z comparing PRMSEsx & PRMSEs
zx = compsd(sqrt(PRx),sqrt(PRs),rsx,sqrt(PRsx),ns,n)#Compute z comparing PRMSEsx & PRMSEx
hedgesolkin = ifelse(PRs>PRx,zs,zx)
# Write the results
cat("\n Haberman’s PRMSEs: ",round(SP[1:ns,2],2),"\n")
cat("\n Haberman’s PRMSEx: ",round(SP[1:ns,3],2),"\n")
cat("\n Haberman’s PRMSEsx: ",round(SP[1:ns,4],2),"\n")
cat("\n Olkin’s Z : ",round(olk,2),"\n")
cat("\n Williams’ t : ",round(wil,2),"\n")
cat("\n Hedges-Olkin’s Z : ",round(hedgesolkin,2),"\n")



